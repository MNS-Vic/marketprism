name: 验证配置一致性

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docker-compose.yml'
      - 'docker-compose.ssl.yml'
      - 'config/**'
      - 'README.md'
      - 'scripts/config_validator.py'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docker-compose.yml'
      - 'docker-compose.ssl.yml'
      - 'config/**'
      - 'README.md'
      - 'scripts/config_validator.py'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: 签出代码
        uses: actions/checkout@v2
      
      - name: 设置Python环境
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema colorama
      
      - name: 运行配置验证脚本
        run: python scripts/config_validator.py --verbose
      
      - name: 设置Docker
        uses: docker/setup-buildx-action@v2
      
      - name: 安装Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      
      - name: 验证docker-compose.yml语法
        run: docker-compose config
      
      - name: 验证docker-compose.ssl.yml语法（如果存在）
        run: |
          if [ -f docker-compose.ssl.yml ]; then
            docker-compose -f docker-compose.ssl.yml config
          else
            echo "docker-compose.ssl.yml文件不存在，跳过验证"
          fi
      
      - name: 检查配置文件兼容性
        run: |
          if grep -r -E "redis.*host\s*:\s*['\"]?[^'\"]+['\"]?" --include="*.yaml" --include="*.yml" config/; then
            echo "在配置文件中发现Redis相关有效配置，这与当前技术栈不兼容"
            exit 1
          fi 