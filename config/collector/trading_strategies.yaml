# 交易策略配置
# 策略驱动的订单簿深度管理配置

# 策略定义
strategies:
  # 套利策略 - 只需要最优几档价格
  arbitrage:
    name: "套利策略"
    description: "跨交易所套利，只需要最优价格档位"
    priority: "high"
    
    # 深度配置
    depth_config:
      default:
        snapshot_depth: 5
        websocket_depth: 5
        update_frequency: "100ms"
      
      # 交易所特定配置
      exchanges:
        binance:
          spot:
            snapshot_depth: 5
            websocket_depth: 5
            api_weight: 1
          perpetual:
            snapshot_depth: 5
            websocket_depth: 5
            api_weight: 2
        okx:
          spot:
            snapshot_depth: 5
            websocket_depth: 5
            api_weight: 1
          perpetual:
            snapshot_depth: 5
            websocket_depth: 5
            api_weight: 1
    
    # 性能配置
    performance:
      snapshot_interval: 60        # 套利策略需要频繁快照
      max_latency_ms: 50          # 低延迟要求
      error_tolerance: "low"       # 低错误容忍度
  
  # 做市策略 - 需要中等深度
  market_making:
    name: "做市策略"
    description: "提供流动性，需要中等深度档位"
    priority: "high"
    
    depth_config:
      default:
        snapshot_depth: 20
        websocket_depth: 20
        update_frequency: "100ms"
      
      exchanges:
        binance:
          spot:
            snapshot_depth: 20
            websocket_depth: 20
            api_weight: 1
          perpetual:
            snapshot_depth: 20
            websocket_depth: 20
            api_weight: 2
        okx:
          spot:
            snapshot_depth: 20
            websocket_depth: 20
            api_weight: 1
          perpetual:
            snapshot_depth: 20
            websocket_depth: 20
            api_weight: 1
    
    performance:
      snapshot_interval: 120
      max_latency_ms: 100
      error_tolerance: "medium"
  
  # 趋势分析策略 - 需要深度数据
  trend_analysis:
    name: "趋势分析策略"
    description: "分析市场趋势，需要较深的订单簿数据"
    priority: "medium"
    
    depth_config:
      default:
        snapshot_depth: 100
        websocket_depth: 100
        update_frequency: "1000ms"
      
      exchanges:
        binance:
          spot:
            snapshot_depth: 100
            websocket_depth: 20      # Binance WebSocket限制
            api_weight: 1
          perpetual:
            snapshot_depth: 100
            websocket_depth: 20
            api_weight: 2
        okx:
          spot:
            snapshot_depth: 100
            websocket_depth: 100     # OKX支持更深的WebSocket
            api_weight: 1
          perpetual:
            snapshot_depth: 100
            websocket_depth: 100
            api_weight: 1
    
    performance:
      snapshot_interval: 300
      max_latency_ms: 500
      error_tolerance: "high"
  
  # 深度分析策略 - 需要最深的数据
  depth_analysis:
    name: "深度分析策略"
    description: "深度市场分析，需要最深的订单簿数据"
    priority: "low"
    
    depth_config:
      default:
        snapshot_depth: 400
        websocket_depth: 400
        update_frequency: "1000ms"
      
      exchanges:
        binance:
          spot:
            snapshot_depth: 1000     # Binance支持更深快照
            websocket_depth: 20      # WebSocket限制
            api_weight: 10
          perpetual:
            snapshot_depth: 500
            websocket_depth: 20
            api_weight: 10
        okx:
          spot:
            snapshot_depth: 400      # OKX最大400档
            websocket_depth: 400
            api_weight: 1
          perpetual:
            snapshot_depth: 400
            websocket_depth: 400
            api_weight: 1
    
    performance:
      snapshot_interval: 600
      max_latency_ms: 2000
      error_tolerance: "high"
  
  # 默认策略 - 平衡配置
  default:
    name: "默认策略"
    description: "平衡的默认配置，适用于一般用途"
    priority: "medium"
    
    depth_config:
      default:
        snapshot_depth: 400
        websocket_depth: 20
        update_frequency: "100ms"
      
      exchanges:
        binance:
          spot:
            snapshot_depth: 400
            websocket_depth: 20
            api_weight: 1
          perpetual:
            snapshot_depth: 400
            websocket_depth: 20
            api_weight: 2
        okx:
          spot:
            snapshot_depth: 400
            websocket_depth: 400
            api_weight: 1
          perpetual:
            snapshot_depth: 400
            websocket_depth: 400
            api_weight: 1
    
    performance:
      snapshot_interval: 300
      max_latency_ms: 200
      error_tolerance: "medium"

# 策略组合配置
strategy_combinations:
  # 多策略组合示例
  arbitrage_and_making:
    name: "套利+做市组合"
    strategies: ["arbitrage", "market_making"]
    depth_config:
      # 取最大深度以满足所有策略需求
      merge_policy: "max_depth"
      snapshot_depth: 20    # max(5, 20)
      websocket_depth: 20   # max(5, 20)
  
  analysis_combo:
    name: "分析组合"
    strategies: ["trend_analysis", "depth_analysis"]
    depth_config:
      merge_policy: "max_depth"
      snapshot_depth: 400   # max(100, 400)
      websocket_depth: 400  # 根据交易所能力调整

# 策略验证规则
validation_rules:
  depth_consistency:
    # 确保WebSocket和快照深度的一致性策略
    binance:
      # Binance WebSocket深度限制
      max_websocket_depth: 20
      websocket_fallback_policy: "use_unlimited_stream"  # 使用@depth@100ms
    okx:
      # OKX支持更深的WebSocket
      max_websocket_depth: 400
      websocket_fallback_policy: "use_max_supported"
  
  api_weight_limits:
    # API权重限制检查
    binance:
      max_weight_per_minute: 1200
      weight_safety_margin: 0.8    # 使用80%的限制
    okx:
      max_weight_per_minute: 3000
      weight_safety_margin: 0.9
  
  performance_constraints:
    # 性能约束
    max_concurrent_strategies: 5
    min_snapshot_interval: 10
    max_snapshot_interval: 3600

# 环境特定覆盖
environments:
  development:
    # 开发环境使用较小的深度以节省资源
    global_overrides:
      max_snapshot_depth: 100
      max_websocket_depth: 20
      snapshot_interval_multiplier: 0.5  # 更频繁的快照用于测试
  
  testing:
    # 测试环境使用最小配置
    global_overrides:
      max_snapshot_depth: 20
      max_websocket_depth: 10
      snapshot_interval_multiplier: 0.1
  
  production:
    # 生产环境使用完整配置
    global_overrides:
      # 无覆盖，使用策略原始配置
      pass

# 动态策略切换配置
dynamic_switching:
  enabled: true
  
  # 切换触发条件
  triggers:
    market_volatility:
      high_volatility_threshold: 0.05    # 5%波动率
      switch_to_strategy: "arbitrage"     # 高波动时切换到套利策略
    
    trading_volume:
      low_volume_threshold: 1000000      # 低交易量阈值
      switch_to_strategy: "trend_analysis"  # 低量时切换到趋势分析
    
    time_based:
      # 时间段策略切换
      market_hours: "market_making"       # 交易时间使用做市策略
      off_hours: "depth_analysis"         # 非交易时间使用深度分析
  
  # 切换策略
  switching_policy:
    cooldown_seconds: 300               # 切换冷却时间
    validation_required: true           # 切换前需要验证
    rollback_on_error: true            # 错误时回滚到之前策略
