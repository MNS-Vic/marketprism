# MarketPrism 服务发现配置

# 服务发现后端配置
service_discovery:
  # 后端类型: consul, etcd, nats, redis, memory
  backend: "memory"  # 默认使用内存后端，适合单机部署
  
  # 后端特定配置
  backend_config:
    # Consul配置
    consul:
      url: "http://localhost:8500"
      datacenter: "dc1"
      token: ""
    
    # etcd配置
    etcd:
      url: "http://localhost:2379"
      username: ""
      password: ""
    
    # NATS配置
    nats:
      url: "nats://localhost:4222"
      user: ""
      password: ""
    
    # Redis配置
    redis:
      url: "redis://localhost:6379"
      password: ""
      db: 0
  
  # 健康检查配置
  health_check_interval: 30  # 秒
  instance_ttl: 300          # 实例过期时间（秒）
  cleanup_interval: 60       # 清理过期实例间隔（秒）
  
  # 自动注册配置
  auto_register: true
  auto_deregister: true
  
  # 负载均衡配置
  load_balancing:
    strategy: "weighted_round_robin"  # round_robin, weighted_round_robin, least_connections
    health_check_required: true
  
  # 事件配置
  events:
    enable_logging: true
    enable_metrics: true

# 环境特定配置
environments:
  # 开发环境
  development:
    backend: "memory"
    health_check_interval: 10
    instance_ttl: 60
    
  # 测试环境
  testing:
    backend: "memory"
    health_check_interval: 5
    instance_ttl: 30
    
  # 生产环境
  production:
    backend: "consul"  # 生产环境推荐使用Consul
    backend_config:
      consul:
        url: "${CONSUL_URL:-http://consul:8500}"
        datacenter: "${CONSUL_DATACENTER:-dc1}"
        token: "${CONSUL_TOKEN:-}"
    health_check_interval: 30
    instance_ttl: 300
    cleanup_interval: 60

# 服务特定配置
services:
  # API网关服务
  api-gateway-service:
    tags: ["gateway", "api", "public"]
    metadata:
      version: "1.0.0"
      environment: "production"
      region: "us-west-1"
    weight: 100
    
  # 数据采集服务
  data-collector:
    tags: ["collector", "data", "internal"]
    metadata:
      version: "1.0.0"
      supported_exchanges: ["binance", "okx", "deribit"]
    weight: 100
    
  # 数据存储服务
  data-storage-service:
    tags: ["storage", "database", "internal"]
    metadata:
      version: "1.0.0"
      storage_type: "clickhouse"
    weight: 100
    
  # 监控服务
  monitoring-service:
    tags: ["monitoring", "metrics", "internal"]
    metadata:
      version: "1.0.0"
      metrics_backend: "prometheus"
    weight: 100
    
  # 调度服务
  scheduler-service:
    tags: ["scheduler", "tasks", "internal"]
    metadata:
      version: "1.0.0"
      scheduler_type: "cron"
    weight: 100
    
  # 消息代理服务
  message-broker-service:
    tags: ["broker", "messaging", "internal"]
    metadata:
      version: "1.0.0"
      broker_type: "nats"
    weight: 100

# 网络配置
network:
  # 默认健康检查端点
  health_check_endpoint: "/health"
  
  # 连接超时
  connection_timeout: 10
  
  # 请求超时
  request_timeout: 30
  
  # 重试配置
  retry:
    max_attempts: 3
    backoff_factor: 2
    max_delay: 60

# 安全配置
security:
  # 启用TLS
  enable_tls: false
  
  # 证书配置
  tls:
    cert_file: ""
    key_file: ""
    ca_file: ""
  
  # 认证配置
  auth:
    enable: false
    type: "token"  # token, basic, oauth2
    token: ""
    username: ""
    password: ""

# 日志配置
logging:
  level: "INFO"
  format: "json"
  enable_structured: true
  
  # 日志字段
  fields:
    service_name: true
    instance_id: true
    timestamp: true
    level: true
    message: true
    
# 监控配置
monitoring:
  # 启用指标收集
  enable_metrics: true
  
  # 指标端点
  metrics_endpoint: "/metrics"
  
  # 指标标签
  metrics_labels:
    service: true
    instance: true
    version: true
    environment: true
    
  # 自定义指标
  custom_metrics:
    - name: "service_discovery_registrations_total"
      type: "counter"
      description: "Total number of service registrations"
      
    - name: "service_discovery_discoveries_total"
      type: "counter"
      description: "Total number of service discoveries"
      
    - name: "service_discovery_health_checks_total"
      type: "counter"
      description: "Total number of health checks performed"
      
    - name: "service_discovery_instances_active"
      type: "gauge"
      description: "Number of active service instances" 