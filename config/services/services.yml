# MarketPrism 微服务配置
# 统一的服务配置管理

services:
  # 数据存储服务配置
  data-storage-service:
    port: 8083  # 修正端口：8087 → 8083 (符合核心业务服务标准)
    host: "0.0.0.0"

  # 热数据存储服务配置
  data-storage-hot-service:
    port: 8087  # 修正端口：8083 → 8087 (避免与data-storage-service冲突，符合核心业务服务标准)
    host: "0.0.0.0"

    # 启用NATS异步数据流（阶段2异步化改造）
    enable_nats: true

    # 存储配置
    storage:
      hot_storage:
        enabled: true
        ttl_hours: 1
        max_size_mb: 1000
      cold_storage:
        enabled: true
        ttl_days: 30
        archive_threshold_hours: 24

    # 数据库配置
    database:
      clickhouse:
        host: "clickhouse"
        port: 8123
        user: "default"
        password: ""
        database: "marketprism"

    # API配置
    api:
      max_request_size: "10MB"
      timeout_seconds: 30
      rate_limit:
        requests_per_minute: 1000
        
  # 任务工作者服务配置（阶段2.3异步化改造）
  task-worker-service:
    port: 8090
    host: "0.0.0.0"

    # NATS配置
    nats_url: "nats://nats:4222"

    # 工作者配置
    worker_count: 3
    worker_type: "general"
    max_concurrent_tasks: 5

    # 任务执行配置
    task_timeout_seconds: 600
    retry_delay_seconds: 60
    heartbeat_interval_seconds: 30


        
  # 数据采集服务配置 (Phase 2) - 集成Binance 2023-2024更新
  data-collector:
    port: 8084
    host: "0.0.0.0"

    # NATS配置
    nats_url: "nats://localhost:4222"
    log_level: "INFO"
    enable_deribit: false  # 默认禁用

    # OrderBook Manager配置
    enable_orderbook: true  # 启用OrderBook Manager

    # 数据聚合配置
    enable_aggregation: true  # 启用数据聚合
    aggregation_interval: 60  # 聚合间隔（秒）
    aggregation_symbols: ["BTC-USDT", "ETH-USDT", "BNB-USDT"]  # 聚合的交易对
    aggregation_exchanges: ["binance", "okx"]  # 聚合的交易所

    # 使用项目根目录config文件夹中的collector配置
    collector_config_path: "config/collector.yaml"
    
    # 采集器配置
    collector:
      max_connections: 100
      reconnect_interval_seconds: 30
      data_buffer_size: 10000
      enable_performance_monitoring: true
      
    # 交易所配置 - 集成最新API特性
    exchanges:
      binance:
        enabled: true
        # Futures API端点（根据2023-2024更新）
        websocket_url: "wss://fstream.binance.com/ws"
        rest_api_url: "https://fapi.binance.com"
        # 2023-07-11更新支持
        features:
          prevent_sor: true
          uid_field: true
          transact_time: true
          duplicate_symbol_error_1151: true
        # 2024-12-09更新支持  
        api_enhancements:
          orig_quote_order_qty: true
          ed25519_keys: true
          timestamp_validation: true
          user_data_stream_websocket: true
      okx:
        enabled: true
        websocket_url: "wss://ws.okx.com:8443/ws/v5/public"
        rest_api_url: "https://www.okx.com"
        features:
          advanced_auth: true
          dynamic_subscriptions: true
      deribit:
        enabled: false
        websocket_url: "wss://www.deribit.com/ws/api/v2"
        rest_api_url: "https://www.deribit.com"
        
    # Binance API兼容性配置（最新标准）
    binance_api_compatibility:
      # 2023年更新
      support_2023_03_13_updates: true  # 错误消息改进、过滤器评估、时间戳等值支持
      support_2023_07_11_updates: true  # preventSor、uid、transactTime、错误码-1151
      # 2024年更新（最新）
      support_2024_12_09_updates: true  # origQuoteOrderQty、Ed25519、严格时间戳验证
      strict_timestamp_validation: true
      enhanced_error_messages: true
      api_version_compliance: "2024-12-12"  # 最新版本兼容
      websocket_user_data_stream_support: true
      sbe_schema_version: "2:1"  # 最新SBE模式
        
  # market-data-collector配置已移除 - 与data-collector重复，统一使用data-collector
        
  # API网关服务配置 (Phase 2) - 集成最新API特性
  api-gateway-service:
    port: 8080
    host: "0.0.0.0"
    
    # 认证配置
    enable_auth: false
    jwt_secret: "marketprism-gateway-secret-2024"
    jwt_algorithm: "HS256"
    
    # 限流配置
    enable_rate_limiting: true
    rate_limit_requests: 100
    rate_limit_window: 60
    
    # 熔断器配置
    enable_circuit_breaker: true
    
    # 缓存配置
    cache_ttl: 300
    
    # 网关配置
    gateway:
      timeout_seconds: 30
      max_request_size: "10MB"
      
    # 路由配置
    routes:
      - path: "/api/v1/storage/*"
        target_service: "data-storage-service"
        methods: ["GET", "POST", "PUT", "DELETE"]
      - path: "/api/v1/scheduler/*"
        target_service: "scheduler-service"
        methods: ["GET", "POST", "PUT", "DELETE"]
      - path: "/api/v1/collector/*"
        target_service: "data-collector"
        methods: ["GET", "POST"]
      - path: "/api/v1/monitoring/*"
        target_service: "monitoring-service"
        methods: ["GET", "POST"]
      - path: "/api/v1/dashboard/*"
        target_service: "monitoring-dashboard"
        methods: ["GET", "POST"]
        
    # 认证配置
    auth:
      enabled: true
      jwt_secret: "your-jwt-secret-key"
      token_expiry_hours: 24
      
    # 限流配置
    rate_limiting:
      enabled: true
      requests_per_minute: 1000
      burst_size: 100
      
  # 监控告警服务配置（阶段2.2异步化改造）
  monitoring-alerting-service:
    port: 8082
    host: "0.0.0.0"

    # 启用NATS异步告警流
    enable_nats: true
    nats_url: "nats://nats:4222"

    # 告警规则配置
    alert_rules:
      evaluation_interval: 60
      default_severity: "medium"

    # 通知配置
    notifications:
      enabled: true
      channels:
        email:
          enabled: false
        webhook:
          enabled: true
          url: "http://monitoring-alerting:8082/api/v1/webhook"
        dingtalk:
          enabled: false
        sms:
          enabled: false


  # 消息代理服务配置 (Phase 3)
  message-broker-service:
    port: 8086  # 修正端口冲突：8081 → 8086 (避免与data-collector冲突)
    host: "0.0.0.0"
    
    # NATS服务器配置
    nats:
      server_cmd: "nats-server"
      config_file: "config/nats/nats-server.conf"
      data_dir: "./data/nats"
      
    # JetStream配置
    jetstream:
      enabled: true
      storage_dir: "./data/nats/jetstream"
      max_memory: "1GB"
      max_file: "10GB"
      
    # 流配置
    streams:
      market_data:
        name: "market_data"
        subjects: ["market.data.>"]
        retention: "interest"
        max_age: "24h"
        max_msgs: 1000000
      alerts:
        name: "alerts"
        subjects: ["alert.>"]
        retention: "limits"
        max_age: "72h"
        max_msgs: 10000
      system_events:
        name: "system_events"
        subjects: ["system.event.>"]
        retention: "workqueue"
        max_age: "1h"
        max_msgs: 10000
        
    # 消费者配置
    consumers:
      market_data_processor:
        stream: "market_data"
        name: "market_data_processor"
        ack_policy: "explicit"
        max_deliver: 3
      alert_handler:
        stream: "alerts"
        name: "alert_handler"
        ack_policy: "explicit"
        max_deliver: 5
        
    # API配置
    api:
      enable_publish: true
      enable_subscribe: true
      enable_management: true
      timeout_seconds: 30
      

      
