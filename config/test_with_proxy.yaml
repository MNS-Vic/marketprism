# MarketPrism测试配置文件（启用代理）
# 版本信息
config_version: "1.2.0"
last_updated: "2025-01-27"

# 代理配置 - 测试环境启用代理
proxy:
  enabled: true  # 启用代理
  http_proxy: "http://127.0.0.1:1087"  # HTTP代理
  https_proxy: "http://127.0.0.1:1087"  # HTTPS代理
  no_proxy: "localhost,127.0.0.1,nats,clickhouse"  # 不使用代理的地址
  # 超时配置
  connect_timeout: 30  # 连接超时(秒)
  read_timeout: 30    # 读取超时(秒)

# NATS配置
nats:
  url: "nats://localhost:4222"  # 基础连接（非SSL）
  reconnect:
    max_attempts: 10
    wait_time: 5  # 秒
  stream:
    max_msgs: 100000  # 每个流的最大消息数
    max_age: 3600     # 消息保留时间(秒)
    subjects:
      trades: "binance.trade.*"
      depth: "binance.depth.*"
      orderbook: "binance.orderbook.*"

# ClickHouse配置
clickhouse:
  host: "localhost"  # 主机名或IP
  port: 9000  # 标准TCP端口
  database: "marketprism"
  user: "default"
  password: ""

# 数据采集配置
legacy_ingestion:
  binance:
    api_version: "2025-03-10"
    use_testnet: false

    # 交易对和数据类型
    symbols: ["BTCUSDT", "ETHUSDT"]  # 减少交易对数量用于测试
    data_types: ["trade", "bookTicker"]  # 减少数据类型用于测试
    
    # WebSocket设置
    websocket:
      base_url: "wss://stream.binance.com:9443"
      reconnect_attempts: 3  # 减少重连次数用于测试
      ping_interval: 20
      pong_timeout: 60
      reconnect_delay: 5
      max_reconnect_delay: 60  # 减少最大重连延迟
      adaptive_heartbeat: true
      combined_streams: true
    
    # REST API设置
    rest:
      base_url: "https://api.binance.com"
      orderbook_snapshot_interval: 60
      depth_limit: 100  # 减少深度限制用于测试
      
      # 请求频率限制配置
      rate_limits:
        agg_trade_weight: 4
        ip_limits:
          requests_per_minute: 1200
          orders_per_second: 50
          orders_per_day: 160000
        monitor_interval: 60
        threshold_warning: 0.7
        threshold_critical: 0.9

# 监控配置
monitoring:
  prometheus:
    enabled: true
    port: 8000
  api_updates:
    check_interval: 86400

# 日志配置
logging:
  level: "DEBUG"  # 测试环境使用DEBUG级别
  format: json
  file: "/tmp/marketprism_test.log"  # 测试日志文件

# 数据处理配置
processing:
  batch_size: 100  # 减少批处理大小用于测试
  flush_interval_ms: 1000

# 告警配置
alerts:
  api_usage:
    warning_threshold: 70
    critical_threshold: 90