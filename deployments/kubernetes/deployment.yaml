# MarketPrism 智能监控告警系统 Kubernetes Deployment 配置

apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-alerting
  namespace: marketprism-monitoring
  labels:
    app: monitoring-alerting
    component: service
    version: v1.0.0
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "MarketPrism智能监控告警系统主服务"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: monitoring-alerting
      component: service
  template:
    metadata:
      labels:
        app: monitoring-alerting
        component: service
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/metrics"
        config.checksum: "{{ include (print $.Template.BasePath \"/configmap.yaml\") . | sha256sum }}"
    spec:
      serviceAccountName: monitoring-alerting
      imagePullSecrets:
        - name: docker-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: monitoring-alerting
        image: ghcr.io/marketprism/monitoring-alerting:${IMAGE_TAG:-latest}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8082
          protocol: TCP
        env:
        # 基础配置
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "production"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        # 数据库连接
        - name: REDIS_URL
          value: "redis://redis:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: redis-password
        - name: CLICKHOUSE_URL
          value: "http://clickhouse:8123"
        - name: CLICKHOUSE_DATABASE
          value: "marketprism"
        - name: CLICKHOUSE_USER
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: clickhouse-user
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: clickhouse-password
        
        # 通知配置
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: smtp-username
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: smtp-password
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: slack-webhook-url
        
        # 安全配置
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: jwt-secret
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: monitoring-alerting-secrets
              key: api-key
        
        # 性能配置
        - name: MAX_WORKERS
          value: "10"
        - name: BATCH_SIZE
          value: "100"
        - name: CACHE_SIZE
          value: "1000"
        
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: data
          mountPath: /app/data
        - name: tmp
          mountPath: /tmp
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      volumes:
      - name: config
        configMap:
          name: monitoring-alerting-config
          defaultMode: 0644
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: data
        emptyDir:
          sizeLimit: 2Gi
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - monitoring-alerting
              topologyKey: kubernetes.io/hostname
      
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      
      terminationGracePeriodSeconds: 30
      
      nodeSelector:
        kubernetes.io/os: linux

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: monitoring-alerting-hpa
  namespace: marketprism-monitoring
  labels:
    app: monitoring-alerting
    component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: monitoring-alerting
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
# PodDisruptionBudget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: monitoring-alerting-pdb
  namespace: marketprism-monitoring
  labels:
    app: monitoring-alerting
    component: disruption-budget
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: monitoring-alerting
      component: service
