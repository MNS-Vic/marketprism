# Docker Compose配置用于端到端测试环境
# 创建完整的数据流测试栈: 数据收集 → NATS → ClickHouse → 归档

version: '3.8'

services:
  # NATS消息队列 (支持JetStream)
  nats:
    image: nats:2.10-alpine
    container_name: nats-test
    ports:
      - "4222:4222"   # NATS协议端口
      - "8222:8222"   # HTTP监控端口
    command: [
      "--jetstream",  # 启用JetStream
      "--http_port", "8222",
      "--store_dir", "/data/jetstream"
    ]
    volumes:
      - nats_data:/data/jetstream
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ClickHouse数据库 (热存储)
  clickhouse:
    image: clickhouse/clickhouse-server:23.3
    container_name: clickhouse-test
    ports:
      - "8123:8123"   # HTTP端口
      - "9000:9000"   # TCP端口
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./test/clickhouse_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ClickHouse冷存储 (模拟)
  clickhouse-cold:
    image: clickhouse/clickhouse-server:23.3
    container_name: clickhouse-cold-test
    ports:
      - "8124:8123"   # HTTP端口 (不同端口避免冲突)
      - "9001:9000"   # TCP端口
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    volumes:
      - clickhouse_cold_data:/var/lib/clickhouse
      - ./test/clickhouse_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (用于缓存和状态管理)
  redis:
    image: redis:7-alpine
    container_name: redis-test
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Python数据收集器
  collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: collector-test
    depends_on:
      nats:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NATS_URL=nats://nats:4222
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
      - TEST_MODE=true  # 启用测试模式
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    ports:
      - "8081:8081"   # REST API端口
    command: ["python", "run_test_collector.py"]
    restart: unless-stopped

  # 数据归档服务
  archiver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: archiver-test
    depends_on:
      clickhouse:
        condition: service_healthy
      clickhouse-cold:
        condition: service_healthy
    environment:
      - SOURCE_CLICKHOUSE_HOST=clickhouse
      - SOURCE_CLICKHOUSE_PORT=8123
      - ARCHIVE_CLICKHOUSE_HOST=clickhouse-cold
      - ARCHIVE_CLICKHOUSE_PORT=8123
      - ARCHIVE_INTERVAL=300  # 5分钟归档间隔 (测试用)
      - LOG_LEVEL=INFO
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    command: ["python", "services/data_archiver/run_archiver.py"]
    restart: unless-stopped

  # 端到端测试运行器
  e2e-tests:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: e2e-tests
    depends_on:
      collector:
        condition: service_started
      archiver:
        condition: service_started
    environment:
      - NATS_URL=nats://nats:4222
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_COLD_HOST=clickhouse-cold
      - CLICKHOUSE_COLD_PORT=8123
      - COLLECTOR_API_URL=http://collector:8081
      - TEST_DURATION=300  # 5分钟测试持续时间
    volumes:
      - ./tests:/app/tests
      - ./test_results:/app/test_results
    command: ["python", "-m", "pytest", "tests/integration/test_end_to_end_data_flow.py", "-v", "--tb=short"]
    profiles:
      - test  # 仅在指定profile时启动

volumes:
  nats_data:
  clickhouse_data:
  clickhouse_cold_data:

networks:
  default:
    name: marketprism-test-network