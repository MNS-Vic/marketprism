[tool:pytest]
testpaths = tests
addopts = 
    --tb=short
    --strict-config
    --cov=services/python-collector/src/marketprism_collector
    --cov-report=term-missing
    --cov-report=html:tests/reports/coverage_unit
    --cov-fail-under=85
    --asyncio-mode=auto
    -v

asyncio_mode = auto
# 移除不支持的选项：asyncio_default_fixture_loop_scope = function

markers =
    unit: 单元测试
    integration: 集成测试
    performance: 性能测试
    load_testing: 负载测试
    rest_api: REST API相关测试
    websocket: WebSocket相关测试
    nats: NATS消息系统测试
    slow: 运行较慢的测试
    cross_exchange: 跨交易所测试
    data_consistency: 数据一致性测试
    real_api: 真实API集成测试
    resilience: 系统恢复能力测试
    stress: 压力测试
    memory: 内存测试
    network: 网络测试
    database: 数据库测试
    mock: Mock测试
    e2e: 端到端测试

# 测试发现规则
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# 覆盖率配置
# 可以使用: pytest --cov=services/python-collector/src/marketprism_collector --cov-report=html
# 例如: pytest tests/unit/python_collector/ --cov=services/python-collector/src/marketprism_collector --cov-report=term-missing --cov-report=html:tests/reports/coverage_unit

# 自定义标记命令行选项
# 可以使用 --run-unit, --run-integration 等指定运行特定类型的测试
# 例如: pytest --run-unit
# 或: pytest --run-integration --run-performance
# 也可以使用标准的 -m 选项，例如: pytest -m "unit and not slow"