# MarketPrism 分层数据存储服务配置
# 支持热端实时存储和冷端归档存储

# NATS配置 - 用于热端服务订阅数据
nats:
  servers:
    - "nats://127.0.0.1:4222"  # 本地NATS服务
  max_reconnect_attempts: 10
  reconnect_time_wait: 2

# HTTP服务器配置
http_port: 8085  # Hot Storage 服务 HTTP 端口（健康检查 8085/health）

# 热端存储配置 - 本地ClickHouse
hot_storage:
  clickhouse_host: "localhost"  # 本地ClickHouse服务
  clickhouse_tcp_port: 9000     # TCP端口（修复键名）
  clickhouse_http_port: 8123
  clickhouse_user: "default"
  clickhouse_password: ""
  clickhouse_database: "marketprism_hot"
  retention_days: 3  # 热端数据保留3天
  batch_size: 500    # 批量写入大小（减少以提高处理速度）
  flush_interval: 2  # 刷新间隔（秒）（减少以提高响应速度）

  # 连接池配置
  connection_pool:
    size: 10
    max_retries: 3
    timeout: 30

  # 性能配置
  performance:
    enable_compression: true
    compression_method: "zstd"
    compression_level: 3
    max_insert_threads: 4
    insert_quorum: 1

  # 表配置
  tables:
    schema_file: "config/clickhouse_schema.sql"
    auto_create: true
    auto_optimize: true

# 冷端存储配置 - 本地ClickHouse
cold_storage:
  http_port: 8086

  clickhouse_host: "localhost"  # 本地ClickHouse服务
  clickhouse_tcp_port: 9000  # TCP端口（修复键名）
  clickhouse_http_port: 8123
  clickhouse_user: "default"
  clickhouse_password: ""
  clickhouse_database: "marketprism_cold"
  retention_days: 365  # 冷端数据保留1年
  batch_size: 5000     # 批量写入大小（更大批次提高效率）
  flush_interval: 30   # 刷新间隔（秒）

  # 连接池配置
  connection_pool:
    size: 5
    max_retries: 5
    timeout: 60

  # 性能配置
  performance:
    enable_compression: true
    compression_method: "zstd"
    compression_level: 6  # 冷端使用更高压缩比
    max_insert_threads: 2
    insert_quorum: 1

  # 表配置
  tables:
    schema_file: "config/clickhouse_schema.sql"
    auto_create: true
    auto_optimize: true


# 批量复制（热->冷）配置（集成到 storage 服务内部，测试模式）
replication:
  enabled: true
  interval_seconds: 60           # 每 1 分钟触发一次
  window_minutes_all: 1          # 所有数据类型统一 1 分钟窗口
  safety_lag_minutes: 2          # 安全延迟 2 分钟，避开正在写入的数据
  cleanup_enabled: true          # [测试模式已开启] 复制确认后删除（热端无TTL，零丢失优先）
  cleanup_delay_minutes: 3       # [测试配置] 清理延迟3分钟，便于观测；生产建议>=60
  cleanup_granularity: "hour"   # 按小时粒度清理（建议生产按小时/天）

# 数据订阅配置 - 热端服务使用
subscriptions:
  # 启用的数据类型
  orderbook_enabled: true
  trade_enabled: true
  funding_rate_enabled: true
  open_interest_enabled: true
  liquidation_enabled: true
  lsr_enabled: true
  volatility_index_enabled: true

# 数据同步配置 - 冷端服务使用
sync:
  interval_hours: 0.1    # 同步间隔（小时）~6分钟（恢复正常）
  batch_hours: 2.0       # 每次同步的数据时间范围（小时）（增加到2小时以确保数据覆盖）
  buffer_minutes: 0      # 同步缓冲时间（分钟），测试环境下设置为0以便立即同步最新数据
  cleanup_enabled: true  # 是否启用热端数据清理
  cleanup_delay_hours: 48  # 同步后多久清理热端数据（小时）

  # 需要同步的数据类型
  data_types:
    - "orderbook"
    - "trade"
    - "funding_rate"
    - "open_interest"
    - "liquidation"
    - "lsr_top_position"
    - "lsr_all_account"
    - "volatility_index"

  # 需要同步的交易所
  exchanges:
    - "binance_spot"
    - "binance_derivatives"
    - "okx_spot"
    - "okx_derivatives"
    - "deribit_derivatives"

  # 每个交易所的交易对配置
  symbols:
    binance_spot:
      - "BTC-USDT"
      - "ETH-USDT"
      - "BNB-USDT"
    binance_derivatives:
      - "BTC-USDT"
      - "ETH-USDT"
      - "BNB-USDT"
    okx_spot:
      - "BTC-USDT"
      - "ETH-USDT"
      - "OKB-USDT"
    okx_derivatives:
      - "BTC-USDT"
      - "ETH-USDT"
      - "OKB-USDT"
    deribit_derivatives:
      - "BTC"
      - "ETH"

# 日志配置
logging:
  level: "INFO"
  format: "json"
  output: "stdout"

# 监控配置
monitoring:
  health_check_interval: 30  # 健康检查间隔（秒）
  metrics_collection_interval: 60  # 指标收集间隔（秒）

# 性能配置
performance:
  max_concurrent_transfers: 5  # 最大并发传输任务数
  transfer_timeout_minutes: 60  # 传输任务超时时间（分钟）
  connection_pool_size: 10     # 连接池大小

# 安全配置
security:
  enable_ssl: false  # 是否启用SSL连接
  verify_checksums: true  # 是否验证数据校验和
  encrypt_transfers: false  # 是否加密数据传输
