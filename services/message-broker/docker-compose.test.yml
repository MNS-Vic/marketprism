# MarketPrism Message Broker - Docker容器化测试配置
# 用于测试阶段1的基础容器化功能
# 注意：此文件仅用于测试，生产环境请使用 docker-compose.nats.yml

services:
  # NATS JetStream服务器
  nats:
    image: nats:2.10-alpine
    container_name: marketprism-nats-test
    hostname: nats
    restart: unless-stopped
    
    # 端口映射
    ports:
      - "4222:4222"    # NATS客户端端口
      - "8222:8222"    # HTTP监控端口
    
    # 启动命令 - 启用JetStream
    command: [
      "--jetstream",
      "--store_dir", "/data/jetstream",
      "--max_memory_store", "256MB",
      "--max_file_store", "2GB",
      "--http_port", "8222"
    ]
    
    # 数据卷
    volumes:
      - nats_test_data:/data/jetstream
    
    # 健康检查
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    
    # 网络
    networks:
      - test-network

  # Message Broker服务（容器化版本）
  message-broker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketprism-message-broker-test
    hostname: message-broker
    restart: unless-stopped
    
    # 端口映射
    ports:
      - "8085:8085"    # HTTP服务端口
    
    # 环境变量配置
    environment:
      # 基础配置
      - ENVIRONMENT=test
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=8085
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      
      # NATS连接配置 - 测试环境使用统一变量
      - MARKETPRISM_NATS_URL=nats://nats:4222
      - NATS_CLIENT_NAME=marketprism-message-broker-test
      - NATS_MAX_RECONNECT=10
      - NATS_RECONNECT_WAIT=2
      
      # JetStream配置
      - JETSTREAM_ENABLED=true
      - STREAM_NAME=MARKET_DATA
      - JETSTREAM_MAX_MSGS=100000
      - JETSTREAM_MAX_BYTES=104857600  # 100MB
      - JETSTREAM_MAX_AGE=3600         # 1小时
      
      # LSR订阅配置
      - LSR_ENABLED=true
      - LSR_CONSUMER_NAME=test-lsr-consumer
      
      # 监控配置
      - HEALTH_CHECK_ENABLED=true
      - METRICS_ENABLED=true
      - STATUS_ENABLED=true
      
      # 调试配置
      - DEBUG_MODE=false
      - VERBOSE_LOGGING=false
    
    # 配置文件挂载
    volumes:
      - ../../config/message-broker:/app/config:ro
      - ./logs:/app/logs
    
    # 依赖服务
    depends_on:
      nats:
        condition: service_healthy
    
    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 网络
    networks:
      - test-network

# 网络配置 - 使用默认网络避免 v1/v2 冲突
networks:
  test-network:
    driver: bridge

# 数据卷配置 - 使用默认命名避免冲突
volumes:
  nats_test_data:
    driver: local
